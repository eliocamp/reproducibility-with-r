<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Day 2 on An R reproducibility toolkit for the practical researcher</title>
    <link>https://eliocamp.github.io/reproducibility-with-r/materials/day2/</link>
    <description>Recent content in Day 2 on An R reproducibility toolkit for the practical researcher</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 15 Mar 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://eliocamp.github.io/reproducibility-with-r/materials/day2/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>01: here are the portable paths</title>
      <link>https://eliocamp.github.io/reproducibility-with-r/materials/day2/01-here/</link>
      <pubDate>Tue, 15 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://eliocamp.github.io/reproducibility-with-r/materials/day2/01-here/</guid>
      <description>If you use RStudio Projects consistently, you can be sure that your working directory is always the root of the project unless you actively change it. Almost. There are two situations in which this assumption can be broken and that can lead to errors or, even worse, surprising results.
Root directory during knit     One issue is that when RMarkdown files are knitted, the working directory in which the code is executed is the location of the .</description>
    </item>
    
    <item>
      <title>02: Getting the most of git</title>
      <link>https://eliocamp.github.io/reproducibility-with-r/materials/day2/02-git/</link>
      <pubDate>Tue, 15 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://eliocamp.github.io/reproducibility-with-r/materials/day2/02-git/</guid>
      <description>Why git?     Do you have something like this in your computer?
/home/pao/Documents/thesis ├── abstract.R ├── thesis.Rmd ├── thesis_reviwed.Rmd ├── thesis_reviwed2.Rmd ├── thesis_final.Rmd ├── thesis_finalfinal.Rmd ├── this_is_it.Rmd ├── now_this_is_it_for_real_this_time_i_swear.Rmd └── FINAL.Rmd  Probably we all have, or had something like this at one point because we didn&amp;rsquo;t use a version control system. Version control systems manage the evolution and changes of a set of files that we&amp;rsquo;ll call repository.</description>
    </item>
    
    <item>
      <title>03: Research compendia with rrtools</title>
      <link>https://eliocamp.github.io/reproducibility-with-r/materials/day2/03-rrtools/</link>
      <pubDate>Tue, 15 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://eliocamp.github.io/reproducibility-with-r/materials/day2/03-rrtools/</guid>
      <description>Of course, you can always create a file structure that suits you and your work by hand. But if you are going to do that a lot, it might be nice to automate some of the work. We are going to use the rrtools package to create a &amp;ldquo;research compendium&amp;rdquo; using a couple of R functions and combine it with the things we learned on the git and GitHub section.</description>
    </item>
    
  </channel>
</rss>
